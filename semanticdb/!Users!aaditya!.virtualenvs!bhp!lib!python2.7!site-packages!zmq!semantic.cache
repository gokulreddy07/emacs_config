;; Object zmq/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "zmq/"
  :tables
  (list
    (semanticdb-table "error.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"0MQ Error classes and functions.\"\"\"" code nil nil [1 39])
            ("ZMQBaseError" type
               (:documentation "Base exception class for 0MQ errors in Python."
                :superclasses ("Exception")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [858 862]))                  
                :type "class")
                nil [766 863])
            ("ZMQError" type
               (:documentation "Wrap an errno style error.

    Parameters
    ----------
    errno : int
        The ZMQ errno or None.  If None, then ``zmq_errno()`` is called and
        used.
    msg : string
        Description of the error or None.
    "
                :superclasses ("ZMQBaseError")
                :members 
                  ( ("errno" variable nil (reparse-symbol indented_block_body) [1136 1148])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"Wrap an errno style error.

        Parameters
        ----------
        errno : int
            The ZMQ errno or None.  If None, then ``zmq_errno()`` is called and
            used.
        msg : string
            Description of the error or None.
        \"\"\"" code nil (reparse-symbol indented_block_body) [1204 1469])
                            ("zmq.sugar.backend" include nil (reparse-symbol indented_block_body) [1478 1527])
                            ("if" code nil (reparse-symbol indented_block_body) [1536 1586])
                            ("if" code nil (reparse-symbol indented_block_body) [1594 1921]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1167 1171])
                            ("errno" variable nil (reparse-symbol function_parameters) [1173 1178])
                            ("msg" variable nil (reparse-symbol function_parameters) [1185 1188]))                          
                        :documentation "Wrap an errno style error.

        Parameters
        ----------
        errno : int
            The ZMQ errno or None.  If None, then ``zmq_errno()`` is called and
            used.
        msg : string
            Description of the error or None.
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1154 1921])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2219 2223]))                          )
                        (reparse-symbol indented_block_body) [2207 2255])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2277 2281]))                          )
                        (reparse-symbol indented_block_body) [2264 2330]))                  
                :type "class")
                nil [864 2330])
            ("ZMQBindError" type
               (:documentation "An error for ``Socket.bind_to_random_port()``.
    
    See Also
    --------
    .Socket.bind_to_random_port
    "
                :superclasses ("ZMQBaseError")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [2495 2499]))                  
                :type "class")
                nil [2332 2500])
            ("NotDone" type
               (:documentation "Raised when timeout is reached while waiting for 0MQ to finish with a Message
    
    See Also
    --------
    .MessageTracker.wait : object for tracking when ZeroMQ is done
    "
                :superclasses ("ZMQBaseError")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [2726 2730]))                  
                :type "class")
                nil [2502 2731])
            ("ContextTerminated" type
               (:documentation "Wrapper for zmq.ETERM"
                :superclasses ("ZMQError")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [2804 2808]))                  
                :type "class")
                nil [2733 2809])
            ("Again" type
               (:documentation "Wrapper for zmq.EAGAIN"
                :superclasses ("ZMQError")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [2871 2875]))                  
                :type "class")
                nil [2811 2876])
            ("_check_rc" function
               (:documentation "internal utility for checking zmq return condition
    
    and raising the appropriate Exception class
    "
                :arguments 
                  ( ("rc" variable nil (reparse-symbol function_parameters) [2892 2894])
                    ("errno" variable nil (reparse-symbol function_parameters) [2896 2901]))                  )
                nil [2878 3386])
            ("__all__" variable nil nil [3388 3483]))          
      :file "error.py"
      :pointmax 3484
      :fsize 3483
      :lastmodtime '(21002 33895 0 0)
      :unmatched-syntax nil))
  :file "!Users!aaditya!.virtualenvs!bhp!lib!python2.7!site-packages!zmq!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
