;; Object lib/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lib/"
  :tables
  (list
    (semanticdb-table "app_globals.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"The application's Globals object\"\"\"" code nil nil [1 39])
            ("logging" include nil nil [40 54])
            ("os" include nil nil [55 64])
            ("sys" include nil nil [65 75])
            ("socket" include nil nil [76 89])
            ("datetime" include nil nil [90 105])
            ("cPickle" include nil nil [106 120])
            ("base64" include nil nil [121 134])
            ("zmq" include nil nil [136 146])
            ("redis" include nil nil [147 159])
            ("pylons" include nil nil [160 173])
            ("pylons" include nil nil [174 204])
            ("beaker.cache" include nil nil [205 242])
            ("if" code nil nil [244 292])
            ("log" variable nil nil [344 377])
            ("myppath" variable nil nil [379 414])
            ("iddbpath" variable nil nil [415 501])
            ("idbinpath" variable nil nil [502 560])
            ("_init_done" variable nil nil [561 579])
            ("try" code nil nil [609 760])
            ("try" code nil nil [761 906])
            ("id.common.secure" include nil nil [907 944])
            ("id.common.license" include nil nil [945 982])
            ("id.common.error" include nil nil [983 1026])
            ("id.common" include nil nil [1027 1055])
            ("id.common.emailer" include nil nil [1056 1096])
            ("id.common.version" include nil nil [1097 1146])
            ("id.common.config" include nil nil [1147 1188])
            ("id.common.connxns" include nil nil [1189 1225])
            ("id.common.audit" include nil nil [1226 1262])
            ("Globals" type
               (:documentation "Globals acts as a container for objects available throughout the
    life of the application

    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"One instance of Globals is created during application
        initialization and is available during requests via the
        'app_globals' variable

        \"\"\"" code nil (reparse-symbol indented_block_body) [1438 1602])
                            ("global" code nil (reparse-symbol indented_block_body) [1611 1628])
                            ("self" variable nil (reparse-symbol indented_block_body) [1637 1687])
                            ("log" code nil (reparse-symbol indented_block_body) [1696 1769])
                            ("global_conf" variable nil (reparse-symbol indented_block_body) [1778 1813])
                            ("judo_conf" variable nil (reparse-symbol indented_block_body) [1823 1883])
                            ("self" variable nil (reparse-symbol indented_block_body) [1892 1926])
                            ("self" variable nil (reparse-symbol indented_block_body) [1935 1982])
                            ("self" variable nil (reparse-symbol indented_block_body) [1991 2032])
                            ("self" variable nil (reparse-symbol indented_block_body) [2041 2061])
                            ("if" code nil (reparse-symbol indented_block_body) [2070 2154])
                            ("self" variable nil (reparse-symbol indented_block_body) [2163 2192])
                            ("if" code nil (reparse-symbol indented_block_body) [2201 2297])
                            ("self" variable nil (reparse-symbol indented_block_body) [2306 2351])
                            ("'epsilon_karan_shared_secret'" code nil (reparse-symbol indented_block_body) [2461 2490])
                            ("self" variable nil (reparse-symbol indented_block_body) [2499 2591])
                            ("self" variable nil (reparse-symbol indented_block_body) [2601 2644])
                            ("self" variable nil (reparse-symbol indented_block_body) [2653 2702])
                            ("self" variable nil (reparse-symbol indented_block_body) [2711 2765])
                            ("log" code nil (reparse-symbol indented_block_body) [2775 2874])
                            ("self" variable nil (reparse-symbol indented_block_body) [2883 2909])
                            ("'127.0.0.1'" code nil (reparse-symbol indented_block_body) [2995 3006])
                            ("7777" code nil (reparse-symbol indented_block_body) [3097 3101])
                            ("'127.0.0.1'" code nil (reparse-symbol indented_block_body) [3196 3207])
                            ("8888" code nil (reparse-symbol indented_block_body) [3307 3311])
                            ("'127.0.0.1'" code nil (reparse-symbol indented_block_body) [3400 3411])
                            ("8899" code nil (reparse-symbol indented_block_body) [3505 3509])
                            ("'127.0.0.1'" code nil (reparse-symbol indented_block_body) [3601 3612])
                            ("1978" code nil (reparse-symbol indented_block_body) [3709 3713])
                            ("False" code nil (reparse-symbol indented_block_body) [3805 3810])
                            ("self" variable nil (reparse-symbol indented_block_body) [3819 3850])
                            ("self" variable nil (reparse-symbol indented_block_body) [3859 3910])
                            ("self" variable nil (reparse-symbol indented_block_body) [3919 3980])
                            ("self" variable nil (reparse-symbol indented_block_body) [3989 4054])
                            ("self" code nil (reparse-symbol indented_block_body) [4063 4142])
                            ("self" variable nil (reparse-symbol indented_block_body) [4151 4195])
                            ("self" variable nil (reparse-symbol indented_block_body) [4204 4221])
                            ("self" variable nil (reparse-symbol indented_block_body) [4230 4259])
                            ("self" variable nil (reparse-symbol indented_block_body) [4268 4330])
                            ("log" code nil (reparse-symbol indented_block_body) [4339 4406])
                            ("self" variable nil (reparse-symbol indented_block_body) [4415 4499])
                            ("if" code nil (reparse-symbol indented_block_body) [4575 4776])
                            ("if" code nil (reparse-symbol indented_block_body) [4785 4958])
                            ("'127.0.0.1'" code nil (reparse-symbol indented_block_body) [5092 5103])
                            ("6379" code nil (reparse-symbol indented_block_body) [5197 5201])
                            ("0" code nil (reparse-symbol indented_block_body) [5289 5290])
                            ("self" variable nil (reparse-symbol indented_block_body) [5299 5385])
                            ("self" variable nil (reparse-symbol indented_block_body) [5395 5461])
                            ("log" code nil (reparse-symbol indented_block_body) [5470 5564])
                            ("log" code nil (reparse-symbol indented_block_body) [5574 5628])
                            ("try" code nil (reparse-symbol indented_block_body) [5638 5911])
                            ("try" code nil (reparse-symbol indented_block_body) [5920 6258])
                            ("init_email" code nil (reparse-symbol indented_block_body) [6267 6288])
                            ("log" code nil (reparse-symbol indented_block_body) [6297 6319])
                            ("try" code nil (reparse-symbol indented_block_body) [6396 6971])
                            ("if" code nil (reparse-symbol indented_block_body) [6980 7157]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1415 1419])
                            ("config" variable nil (reparse-symbol function_parameters) [1421 1427]))                          
                        :documentation "One instance of Globals is created during application
        initialization and is available during requests via the
        'app_globals' variable

        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1402 7157]))                  
                :type "class")
                nil [1265 7157]))          
      :file "app_globals.py"
      :pointmax 7157
      :fsize 7156
      :lastmodtime '(21002 30695 0 0)
      :unmatched-syntax '((NAME 5210 . 5214) (IF 5255 . 5257) (ELSE 5284 . 5288) (NAME 5112 . 5116) (IF 5161 . 5163) (ELSE 5192 . 5196) (NAME 5012 . 5016) (IF 5056 . 5058) (ELSE 5087 . 5091) (NAME 3722 . 3726) (IF 3753 . 3755) (ELSE 3800 . 3804) (NAME 3621 . 3625) (IF 3672 . 3674) (ELSE 3704 . 3708) (NAME 3518 . 3522) (IF 3564 . 3566) (ELSE 3596 . 3600) (NAME 3420 . 3424) (IF 3469 . 3471) (ELSE 3500 . 3504) (NAME 3320 . 3324) (IF 3364 . 3366) (ELSE 3395 . 3399) (NAME 3216 . 3220) (IF 3269 . 3271) (ELSE 3302 . 3306) (NAME 3110 . 3114) (IF 3158 . 3160) (ELSE 3191 . 3195) (NAME 3015 . 3019) (IF 3062 . 3064) (ELSE 3092 . 3096) (NAME 2918 . 2922) (IF 2960 . 2962) (ELSE 2990 . 2994) (NAME 2360 . 2384) (IF 2419 . 2421) (ELSE 2456 . 2460)))
    (semanticdb-table "cache.py"
      :major-mode 'python-mode
      :tags 
        '( ("logging" include nil nil [39 53])
            ("cPickle" include nil nil [54 68])
            ("sets" include nil nil [69 89])
            ("pylons" include nil nil [91 121])
            ("id.common.cache" include nil nil [123 205])
            ("id.common.cache" include nil nil [206 268])
            ("id.vaitarna.model" include nil nil [269 300])
            ("log" variable nil nil [302 335]))          
      :file "cache.py"
      :pointmax 336
      :fsize 335
      :lastmodtime '(21002 30695 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "helpers.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"Helper functions

Consists of functions to typically be used within templates, but also
available to Controllers. This module is available to templates as 'h'.
\"\"\"" code nil nil [1 167])
            ("random" include nil nil [276 301])
            ("datetime" include nil nil [302 331])
            ("time" include nil nil [332 343])
            ("markupsafe" include nil nil [345 399])
            ("webhelpers.html" include nil nil [401 436])
            ("webhelpers.html.tags" include nil nil [437 471])
            ("webhelpers.html.builder" include nil nil [472 509])
            ("webhelpers" include nil nil [510 537])
            ("id.db.schema" include nil nil [538 671])
            ("id.db.schema" include nil nil [672 907])
            ("id.db.schema" include nil nil [908 1075])
            ("id.db.schema" include nil nil [1076 1138])
            ("id.db.schema" include nil nil [1139 1185])
            ("pylons" include nil nil [1186 1208])
            ("id.common.prefs" include nil nil [1209 1259])
            ("id.common.util" include nil nil [1260 1300])
            ("tasktype_names" variable nil nil [1302 2504])
            ("keytype_names" variable nil nil [2506 2578])
            ("ostype_names" variable nil nil [2580 3008])
            ("decision_types" variable nil nil [3010 3085])
            ("entity_type_names" variable nil nil [3087 3361])
            ("obj_type_names" variable nil nil [3363 3444])
            ("entity_typed_properties" variable nil nil [3446 3626])
            ("first_task_tab" variable nil nil [3629 5463])
            ("template_types" variable nil nil [5465 6045])
            ("template_type_dict" variable nil nil [6047 6088])
            ("getprop_match" variable nil nil [6090 6254])
            ("script_type_name" function (:arguments 
              ( ("typ" variable nil (reparse-symbol function_parameters) [6278 6281]))              ) nil [6257 6376])
            ("entity_type_name" function
               (:documentation "return printable names for entity types"
                :arguments 
                  ( ("en_type" variable nil (reparse-symbol function_parameters) [6399 6406]))                  )
                nil [6378 6557])
            ("obj_type_name" function
               (:documentation "return printable names for object types"
                :arguments 
                  ( ("obj_type" variable nil (reparse-symbol function_parameters) [6577 6585]))                  )
                nil [6559 6733])
            ("entity_reserved_name" function
               (:documentation "return the reserved prop list of an entity type"
                :arguments 
                  ( ("en_type" variable nil (reparse-symbol function_parameters) [6760 6767]))                  )
                nil [6735 6922])
            ("task_type_requires_rundetails" function
               (:documentation "return true for types what require a run details section (entity, machine, credentials)"
                :arguments 
                  ( ("ttype" variable nil (reparse-symbol function_parameters) [6958 6963]))                  )
                nil [6924 7340])
            ("task_type_requires_ignore_error" function
               (:documentation "return true if this task type requires a ignore_errors attribute"
                :arguments 
                  ( ("ttype" variable nil (reparse-symbol function_parameters) [7378 7383]))                  )
                nil [7342 7715])
            ("task_type_requires_ignore_warning" function
               (:documentation "return true if this task type requires a ignore_child_warnings attribute"
                :arguments 
                  ( ("ttype" variable nil (reparse-symbol function_parameters) [7755 7760]))                  )
                nil [7717 7975])
            ("task_type_requires_child_list" function
               (:documentation "return true for types which require a tree for children"
                :arguments 
                  ( ("ttype" variable nil (reparse-symbol function_parameters) [8011 8016]))                  )
                nil [7977 8201])
            ("cred_type_name" function
               (:documentation "Return the user printable name for creds type"
                :arguments 
                  ( ("cred_type" variable nil (reparse-symbol function_parameters) [8222 8231]))                  )
                nil [8203 8386])
            ("creds_print" function
               (:documentation "Printable representation for credential"
                :arguments 
                  ( ("creds" variable nil (reparse-symbol function_parameters) [8404 8409]))                  )
                nil [8388 8509])
            ("os_type_name" function
               (:documentation "Return the user printable name for OS"
                :arguments 
                  ( ("ostype" variable nil (reparse-symbol function_parameters) [8528 8534]))                  )
                nil [8511 8670])
            ("machine_print" function
               (:documentation "Printable repr for a machine"
                :arguments 
                  ( ("m" variable nil (reparse-symbol function_parameters) [8690 8691]))                  )
                nil [8672 8791])
            ("task_name" function
               (:documentation "Return user printable name for task type"
                :arguments 
                  ( ("ttype" variable nil (reparse-symbol function_parameters) [8807 8812]))                  )
                nil [8793 8952])
            ("best_group" function
               (:documentation "Get the closest group the task should run as"
                :arguments 
                  ( ("user" variable nil (reparse-symbol function_parameters) [8969 8973])
                    ("default" variable nil (reparse-symbol function_parameters) [8975 8982]))                  )
                nil [8954 9158])
            ("safe_get" function
               (:documentation "Safely get an attribute name from obj, return default if None"
                :arguments 
                  ( ("obj" variable nil (reparse-symbol function_parameters) [9173 9176])
                    ("name" variable nil (reparse-symbol function_parameters) [9178 9182])
                    ("default" variable nil (reparse-symbol function_parameters) [9184 9191]))                  )
                nil [9160 9423])
            ("formatBoolean" function
               (:documentation "convert a boolean into a Yes/No value"
                :arguments 
                  ( ("val" variable nil (reparse-symbol function_parameters) [9443 9446]))                  )
                nil [9425 9546])
            ("get_task_entity_wfname" function
               (:documentation "Get a printable name for task entity"
                :arguments 
                  ( ("task" variable nil (reparse-symbol function_parameters) [9575 9579]))                  )
                nil [9548 9722])
            ("get_task_entity" function
               (:documentation "get the (entity,entityid) for a task, or (None,None)"
                :arguments 
                  ( ("task" variable nil (reparse-symbol function_parameters) [9744 9748]))                  )
                nil [9724 9899])
            ("get_task_machine" function
               (:documentation "get the (machine,machineid) for a task, or (None,None)"
                :arguments 
                  ( ("task" variable nil (reparse-symbol function_parameters) [9922 9926]))                  )
                nil [9901 10081])
            ("get_task_machine_wfname" function
               (:documentation "get the printable name for task machine"
                :arguments 
                  ( ("task" variable nil (reparse-symbol function_parameters) [10111 10115]))                  )
                nil [10083 10263])
            ("get_status_html" function
               (:documentation "get appropriate html for different run statuses"
                :arguments 
                  ( ("status" variable nil (reparse-symbol function_parameters) [10285 10291]))                  )
                nil [10265 10444])
            ("obj_type_names" variable nil nil [10445 11063])
            ("get_obj_link" function
               (:documentation "return the url for a group"
                :arguments 
                  ( ("obj" variable nil (reparse-symbol function_parameters) [11083 11086])
                    ("action" variable nil (reparse-symbol function_parameters) [11088 11094]))                  )
                nil [11066 11624])
            ("get_max_link" function
               (:documentation "return the highest priv edit or view url for a group"
                :arguments 
                  ( ("obj" variable nil (reparse-symbol function_parameters) [11643 11646])
                    ("user" variable nil (reparse-symbol function_parameters) [11648 11652])
                    ("group" variable nil (reparse-symbol function_parameters) [11654 11659]))                  )
                nil [11626 11972])
            ("_make_group_string" function (:arguments 
              ( ("group" variable nil (reparse-symbol function_parameters) [11997 12002])
                ("current_group" variable nil (reparse-symbol function_parameters) [12004 12017]))              ) nil [11974 12204])
            ("get_prop_from" function
               (:documentation "return the ancestory of this property object"
                :arguments 
                  ( ("pt" variable nil (reparse-symbol function_parameters) [12224 12226])
                    ("group" variable nil (reparse-symbol function_parameters) [12228 12233]))                  )
                nil [12206 18837])
            ("get_rwi_action" function (:arguments 
              ( ("action" variable nil (reparse-symbol function_parameters) [18858 18864]))              ) nil [18839 19043])
            ("get_code_type" function
               (:documentation "Map intelligently to code mirror mode type"
                :arguments 
                  ( ("payload" variable nil (reparse-symbol function_parameters) [19063 19070]))                  )
                nil [19045 19333]))          
      :file "helpers.py"
      :pointmax 19333
      :fsize 19332
      :lastmodtime '(21002 30695 0 0)
      :unmatched-syntax '((RETURN 6832 . 6838) (IF 6872 . 6874) (ELSE 6910 . 6914))))
  :file "!Users!aaditya!work!epsilon!src!id!vaitarna!lib!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
